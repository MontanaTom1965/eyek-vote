name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'vote/**'
      - 'screen/**'
      - 'host/**'
      - 'board/**'
      - 'reports/**'
      - 'assets/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SG_HOST: ${{ secrets.SG_HOST }}
      SG_PORT: ${{ secrets.SG_PORT }}
      SG_USER: ${{ secrets.SG_USER }}
      SG_BASE_PATH: ${{ secrets.SG_BASE_PATH }}
      SG_DEPLOY_KEY_B64: ${{ secrets.SG_DEPLOY_KEY_B64 }}

    steps:
      - name: Fail fast if secrets missing
        shell: bash
        run: |
          set -e
          missing=0
          for v in SG_HOST SG_PORT SG_USER SG_BASE_PATH SG_DEPLOY_KEY_B64; do
            if [ -z "${!v}" ]; then echo "MISSING SECRET: $v"; missing=1; fi
          done
          [ "$missing" -eq 0 ] || { echo "::error::Missing one or more required secrets"; exit 1; }

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          echo "$SG_DEPLOY_KEY_B64" | base64 -d > ~/.ssh/eyek_ci
          chmod 600 ~/.ssh/eyek_ci
          ssh-keyscan -p "$SG_PORT" "$SG_HOST" >> ~/.ssh/known_hosts

      - name: Ensure remote folders exist
        shell: bash
        run: |
          set -euo pipefail
          ssh -i ~/.ssh/eyek_ci -p "$SG_PORT" "$SG_USER@$SG_HOST" \
            "mkdir -p '$SG_BASE_PATH/vote' '$SG_BASE_PATH/screen' '$SG_BASE_PATH/host' '$SG_BASE_PATH/board' '$SG_BASE_PATH/reports' '$SG_BASE_PATH/assets'"

      - name: Rsync folders
        shell: bash
        run: |
          set -euo pipefail
          sync_dir () {
            local local_dir="$1"
            local remote_dir="$2"
            if [ -d "$local_dir" ]; then
              echo "→ Syncing $local_dir -> $remote_dir"
              rsync -avz --delete --exclude ".git" \
                -e "ssh -i ~/.ssh/eyek_ci -p $SG_PORT" \
                "$local_dir"/ "$SG_USER@$SG_HOST:$SG_BASE_PATH/$remote_dir/"
            else
              echo "⏭  Skipping $local_dir (not found)"
            fi
          }
          sync_dir vote vote
          sync_dir screen screen
          sync_dir host host
          sync_dir board board
          sync_dir reports reports
          sync_dir assets assets
