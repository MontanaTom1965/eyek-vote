name: Deploy to SiteGround

on:
  push:
    branches: [ main ]      # change if your default branch is different
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SG_HOST: ${{ secrets.SG_HOST }}
      SG_PORT: ${{ secrets.SG_PORT }}
      SG_USER: ${{ secrets.SG_USER }}
      SG_REMOTE_PATH: ${{ secrets.SG_REMOTE_PATH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Load your private key and passphrase into ssh-agent (no prompts)
      - name: Prepare SSH (ssh-agent + passphrase)
        shell: bash
        env:
          PASSPHRASE: ${{ secrets.SG_SSH_PASSPHRASE }}
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          # write key
          printf "%s" "${{ secrets.SG_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # start agent & feed passphrase through SSH_ASKPASS
          eval "$(ssh-agent -s)"
          echo 'echo $PASSPHRASE' > /tmp/askpass.sh
          chmod +x /tmp/askpass.sh
          export SSH_ASKPASS=/tmp/askpass.sh
          export DISPLAY=:0   # required for askpass on headless linux
          setsid ssh-add ~/.ssh/id_rsa < /dev/null

          # host key checks (simple mode). If you added SG_KNOWN_HOSTS, use that instead.
          if [ -n "${{ secrets.SG_KNOWN_HOSTS || '' }}" ]; then
            echo "${{ secrets.SG_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
          else
            echo -e "Host *\n  StrictHostKeyChecking no\n  IdentitiesOnly yes\n" > ~/.ssh/config
          fi

      - name: Smoke test SSH (verbose)
        shell: bash
        run: |
          set -e
          ssh -vvv -p "$SG_PORT" "$SG_USER@$SG_HOST" 'echo "SSH OK on $(hostname)"; whoami; pwd'

      - name: Ensure remote path exists
        shell: bash
        run: |
          ssh -p "$SG_PORT" "$SG_USER@$SG_HOST" "
            echo 'Remote HOME:' \$HOME
            mkdir -p '${{ secrets.SG_REMOTE_PATH }}'
          "

      - name: Ensure subfolders (optional)
        shell: bash
        run: |
          ssh -p "$SG_PORT" "$SG_USER@$SG_HOST" "
            mkdir -p '${{ secrets.SG_REMOTE_PATH }}/screen' \
                     '${{ secrets.SG_REMOTE_PATH }}/board'  \
                     '${{ secrets.SG_REMOTE_PATH }}/host'   \
                     '${{ secrets.SG_REMOTE_PATH }}/vote'   \
                     '${{ secrets.SG_REMOTE_PATH }}/admin'
          "

      - name: Deploy via rsync (screen/board/host/vote/admin)
        shell: bash
        run: |
          set -e
          for d in screen board host vote admin; do
            if [ -d "$d" ]; then
              echo "== Deploying $d -> $SG_REMOTE_PATH/$d =="
              rsync -az --delete \
                -e "ssh -p $SG_PORT" \
                --exclude ".DS_Store" \
                "$d/" "$SG_USER@$SG_HOST:$SG_REMOTE_PATH/$d/"
            fi
          done
