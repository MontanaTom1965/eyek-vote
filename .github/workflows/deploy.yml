name: Deploy to SiteGround (folders)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SG_HOST: ${{ secrets.SG_HOST }}
      SG_PORT: ${{ secrets.SG_PORT }}
      SG_USER: ${{ secrets.SG_USER }}
      SG_BASE_PATH: ${{ secrets.SG_BASE_PATH }}
      SG_DEPLOY_KEY_B64: ${{ secrets.SG_DEPLOY_KEY_B64 }}

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show what we actually checked out (sanity)
        run: |
          echo "Repo root contents:"
          ls -la
          echo
          echo "Subfolders if present:"
          for d in vote screen host board assets reports; do
            if [ -d "$d" ]; then
              echo "---- $d/"
              ls -la "$d"
            else
              echo "---- $d/ (missing locally)"
            fi
          done

      - name: Prepare SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          # write deploy key from base64 (no passphrase)
          echo "$SG_DEPLOY_KEY_B64" | base64 -d > ~/.ssh/sg_deploy
          chmod 600 ~/.ssh/sg_deploy
          # We’ll accept host keys automatically to avoid needing SG_HOSTKEY
          printf "Host %s\n  HostName %s\n  Port %s\n  User %s\n  IdentityFile ~/.ssh/sg_deploy\n  StrictHostKeyChecking no\n" \
            "$SG_HOST" "$SG_HOST" "$SG_PORT" "$SG_USER" >> ~/.ssh/config

      - name: Make remote folders (under your subdomain only)
        shell: bash
        run: |
          set -euo pipefail
          # Never touch '/' – only your subdomain base path
          ssh "$SG_HOST" "mkdir -p \"$SG_BASE_PATH\"/vote \"$SG_BASE_PATH\"/screen \"$SG_BASE_PATH\"/host \"$SG_BASE_PATH\"/board \"$SG_BASE_PATH\"/assets \"$SG_BASE_PATH\"/reports"

      - name: Deploy folders
        shell: bash
        run: |
          set -euo pipefail
          RSYNC_SSH="ssh -p ${SG_PORT} -i ~/.ssh/sg_deploy -o StrictHostKeyChecking=no"
          sync_dir () {
            local local_dir="$1"
            local remote_dir="$2"
            if [ -d "$local_dir" ]; then
              echo "→ Syncing ./$local_dir/ to $remote_dir"
              rsync -avz --delete -e "$RSYNC_SSH" "./$local_dir/" "$SG_USER@$SG_HOST:$SG_BASE_PATH/$local_dir/"
            else
              echo "⏭  Skipping ./$local_dir/ (not found locally)"
            fi
          }
          sync_dir vote    "$SG_BASE_PATH/vote/"
          sync_dir screen  "$SG_BASE_PATH/screen/"
          sync_dir host    "$SG_BASE_PATH/host/"
          sync_dir board   "$SG_BASE_PATH/board/"
          sync_dir assets  "$SG_BASE_PATH/assets/"
          sync_dir reports "$SG_BASE_PATH/reports/"

      - name: Post-check (list remote)
        shell: bash
        run: |
          echo "Remote listing under $SG_BASE_PATH:"
          ssh "$SG_HOST" "ls -la \"$SG_BASE_PATH\"; echo; for d in vote screen host board assets reports; do echo \"--- \$d/\"; ls -la \"$SG_BASE_PATH/\$d\" || true; done"
